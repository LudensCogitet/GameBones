#ifndef INCLUDED_ENUM_H
#define INCLUDED_ENUM_H

typedef enum GB_ANIM_TYPE {
    ANIM_TYPE_LOOP,
    ANIM_TYPE_PINGPONG,
} GB_ANIM_TYPE;

typedef enum GB_ENTITY_TYPE {
    ENTITY_TYPE_PLAYER_SHIP,
    ENTITY_TYPE_ASTEROID,
    ENTITY_TYPE_NUM_ENTITY_TYPES
} GB_ENTITY_TYPE;

typedef enum GB_GFX_LAYER {
    GFX_LAYER_BACKGROUND,
    GFX_LAYER_MIDGROUND,
    GFX_LAYER_FOREGROUND,
    GFX_LAYER_NUM_LAYERS
} GB_GFX_LAYER;

typedef enum GB_GFX_FONT {
    GFX_FONT_LARGE_FREE_MONO,
    GFX_FONT_NUM_FONTS
} GB_GFX_FONT;

typedef enum GB_GFX_COLOR {
    GFX_COLOR_WHITE,
    GFX_COLOR_BLACK,
    GFX_COLOR_NUM_COLORS
} GB_GFX_COLOR;

typedef enum GB_INPUT {
    GB_INPUT_THRUST,
    GB_INPUT_BREAK,
    GB_INPUT_ROTATE_LEFT,
    GB_INPUT_ROTATE_RIGHT,
    GB_INPUT_SELECT,
    GB_INPUT_PAN_CAMERA_UP,
    GB_INPUT_PAN_CAMERA_DOWN,
    GB_INPUT_PAN_CAMERA_LEFT,
    GB_INPUT_PAN_CAMERA_RIGHT,
    GB_INPUT_BE_AWESOME,
    GB_INPUT_QUIT_GAME,
    GB_INPUT_NUM_INPUTS
} GB_INPUT;

typedef enum GB_PHYSICS_COLLIDER_TYPE {
    PHYSICS_COLLIDER_CIRCLE,
    PHYSICS_COLLIDER_NUM_COLLIDER_TYPES
} GB_PHYSICS_COLLIDER_TYPE;

typedef enum GB_GFX_TEXTURE {
    GFX_TEXTURE_SHIP,
    GFX_TEXTURE_ASTEROID,
    GFX_TEXTURE_BACKGROUND,
    GFX_TEXTURE_DYNAMIC_FIRST,
    GFX_TEXTURE_DYNAMIC_LAST,
    GFX_TEXTURE_NUM_TEXTURES
} GB_GFX_TEXTURE;

#endif
